{"sections":[],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":" "},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}],"name":"latitude"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","role":"symbol","symbolKind":"method","title":"containsLatitude(forLatitude:)","modules":[{"name":"MapboxMaps"}]},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","role":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/coordinatebounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoordinateBounds"}],"title":"CoordinateBounds","navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"abstract":[],"role":"collection","type":"topic","title":"MapboxMaps Documentation","url":"\/documentation\/overview","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"abstract":[],"kind":"article","type":"topic","title":"MapboxMap","role":"collectionGroup","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"url":"\/documentation\/mapboxmaps","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","kind":"symbol","title":"MapboxMaps"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"title":"containsLatitude(forLatitude:)","url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"op":"replace","path":"\/metadata\/fragments"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","value":null,"path":"\/relationshipsSections"},{"path":"\/seeAlsoSections","op":"add","value":null},{"value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier","text":"BOOL"},{"kind":"text","text":") "},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:d","kind":"typeIdentifier","text":"double"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}]}]},"op":"replace","path":"\/primaryContentSections\/0"},{"path":"\/primaryContentSections\/1","op":"replace","value":{"kind":"parameters","parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}]}]}},{"path":"\/primaryContentSections\/2","value":{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]},"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","value":"MBMCoordinateBounds"},{"op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments"},{"value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle"},{"value":"containsLatitudeForLatitude:","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title"},{"op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"}]}]}