{"metadata":{"symbolKind":"property","title":"gte","roleHeading":"Type Property","modules":[{"name":"MapboxMaps"}],"externalID":"s:10MapboxMaps3ExpV8OperatorV3gteAEvpZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"gte"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier"}]},"variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/gte"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the first input is greater than or equal to the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"gte","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","text":"Operator"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/gte"},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"kind":"symbol","sections":[],"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"role":"collection","kind":"symbol","type":"topic","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps"},"doc://MapboxMaps/documentation/MapboxMaps/Exp":{"title":"Exp","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"url":"\/documentation\/mapboxmaps\/exp","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Exp"}],"navigatorTitle":[{"text":"Exp","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"symbol","role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"kind":"symbol","abstract":[],"title":"Exp.Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Operator","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Operator","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/gte":{"role":"symbol","title":"gte","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/gte","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/gte","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the first input is greater than or equal to the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"gte","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"kind":"article","abstract":[],"title":"Expressions","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","url":"\/documentation\/mapboxmaps\/expressions","type":"topic","role":"collectionGroup"}}}