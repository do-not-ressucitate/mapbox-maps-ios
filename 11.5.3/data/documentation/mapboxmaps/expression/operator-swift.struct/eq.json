{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"eq","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","text":"Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"typeIdentifier"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV2eqAEvpZ","symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eq","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}],"title":"eq"},"sections":[],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the input values are equal, "},{"type":"codeVoice","code":"false"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/eq"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/eq"},"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"title":"Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Expression"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expression","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","type":"reference","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"text":" ","type":"text"},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"type":"topic","role":"collection","url":"\/documentation\/mapboxmaps","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/eq":{"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/eq","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the input values are equal, "},{"type":"codeVoice","code":"false"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/eq","type":"topic","title":"eq","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eq"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/mapboxmaps\/expressions","title":"Expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Operator"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"symbol","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","title":"Expression.Operator"}}}