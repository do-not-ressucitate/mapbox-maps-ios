{"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"lte","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"title":"lte","symbolKind":"property","roleHeading":"Type Property","role":"symbol","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3lteAEvpZ","modules":[{"name":"MapboxMaps"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lte","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"kind":"symbol","references":{"doc://MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"type":"topic","role":"collection","url":"\/documentation\/mapboxmaps","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/mapboxmaps\/expressions","title":"Expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"title":"Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Expression"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expression","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","type":"reference","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"text":" ","type":"text"},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Operator"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"symbol","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","title":"Expression.Operator"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lte":{"role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","title":"lte","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lte"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}]}}}