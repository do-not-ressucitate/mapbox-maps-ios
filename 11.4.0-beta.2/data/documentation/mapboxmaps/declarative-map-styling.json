{"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"MapboxMaps"}],"title":"Declarative Map Styling"},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps"]]},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Style","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Layers","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Sources","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Layer-Property-Values","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions"],"title":"Style"}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/declarative-map-styling"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Simplify runtime style manipulation with declarative syntax.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"Starting from version ","type":"text"},{"code":"11.4.0-beta.1","type":"codeVoice"},{"type":"text","text":" of Mapbox Maps SDK you can now use a declarative approach to add or update style primitives such as Sources, Layers, Images, and Lights at runtime. This paradigm simplifies working with all Mapbox styles at runtime and works well in SwiftUI and UIKit applications."}],"type":"paragraph"},{"anchor":"Getting-Started","level":3,"type":"heading","text":"Getting Started"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As these features are experimental, there may be breaking changes between minor versions. In this period, we are especially interested in hearing feedback from developers like you! To provide feedback please open an issue in "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/issues"},{"text":" repository. To opt-in, import MapboxMaps with the experimental SPI:","type":"text"}]},{"code":["@_spi(Experimental) import MapboxMaps"],"type":"codeListing","syntax":"swift"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"Declarative styling is available starting from iOS 13.","type":"text"}],"type":"paragraph"}],"name":"Note"},{"inlineContent":[{"type":"text","text":"Then, you can use the "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)","isActive":true,"type":"reference"},{"text":" method, which is available in ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Snapshotter","type":"reference","isActive":true},{"text":" instances.","type":"text"}],"type":"paragraph"},{"code":["\/\/ UIKit","let mapView = MapView()","mapView.mapboxMap.setMapStyleContent {","    VectorSource(id: \"traffic-source\")","        .tiles([\"...\"])","    ","    LineLayer(id: \"traffic-layer\", source: \"traffic-source\")","        .lineColor(.red)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"In SwiftUI applications, simply place the style primitives inside the "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Map","type":"reference","isActive":true},{"type":"text","text":" content:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ SwiftUI","Map {","    VectorSource(id: \"traffic\")","        .tiles([\"...\"])","","    LineLayer(id: \"traffic-layer\", source: \"traffic\")","        .lineColor(.red)","}"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You donâ€™t need to observe any events to modify the map style. Changes will be automatically applied when the map style is loaded."}]}],"type":"aside","name":"Important"},{"type":"heading","level":3,"anchor":"Map-Style-Primitives","text":"Map Style Primitives"},{"inlineContent":[{"text":"Style primitives are pieces of map content that can be added, updated, and removed at runtime. These primitives represent the data sources and visualization choices for your map.","type":"text"}],"type":"paragraph"},{"level":4,"text":"Building Style Primitives","anchor":"Building-Style-Primitives","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use a builder syntax to modify the properties of your style primitives when you add them to your map. If you update these properties the changes will be reflected on your map."}]},{"syntax":"swift","code":["\/\/ Create a atmosphere primitive and set properties for range, start intensity, and color","Atmosphere()","    .range(start: 0, end: 12)","    .horizonBlend(0.1)","    .starIntensity(0.2)","    .color(StyleColor(red: 240, green: 196, blue: 152, alpha: 1)!)","    .highColor(StyleColor(red: 221, green: 209, blue: 197, alpha: 1)!)","    .spaceColor(StyleColor(red: 153, green: 180, blue: 197, alpha: 1)!)"],"type":"codeListing"},{"text":"Available Style Primitives","level":4,"anchor":"Available-Style-Primitives","type":"heading"},{"type":"table","header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Category"}]}],[{"inlineContent":[{"type":"text","text":"Types supported"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Source"}]}],[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/VectorSource"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterSource","isActive":true,"type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterDemSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource","isActive":true},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ImageSource"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Model"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomGeometrySource","type":"reference","isActive":true},{"type":"text","text":" (partial), "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomRasterSource","isActive":true,"type":"reference"},{"type":"text","text":" (partial)"}]}]],[[{"inlineContent":[{"code":"Layer","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FillLayer"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/LineLayer","type":"reference","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/SymbolLayer","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CircleLayer"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/HeatmapLayer","isActive":true},{"text":", ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FillExtrusionLayer"},{"type":"text","text":", "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterLayer","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/HillshadeLayer","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/BackgroundLayer"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/LocationIndicatorLayer","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/SkyLayer","isActive":true,"type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ModelLayer","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomLayer","isActive":true},{"text":" (partial)","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Lights"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FlatLight"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/AmbientLight","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/DirectionalLight"}]}]],[[{"inlineContent":[{"type":"codeVoice","code":"Map properties"}],"type":"paragraph"}],[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Projection"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","isActive":true,"type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Terrain","type":"reference","isActive":true},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/TransitionOptions-swift.struct"}],"type":"paragraph"}]]]},{"type":"heading","text":"Adding Style Primitives Conditionally","level":3,"anchor":"Adding-Style-Primitives-Conditionally"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use conditionals to add and remove map style primitives. In the example below, "},{"code":"useTerrain","type":"codeVoice"},{"type":"text","text":" is a variable controlled by your code, perhaps toggled when a user selects a button or changes a setting. When true, the Style Projection is set to Globe, terrain data is added to a RasterDem source and visualized with a Terrain map content. When toggled false, the terrain source and content are removed and the project is set to Mercator. Other content on the map is not affected by this change so updates are lightweight."}]},{"type":"tabNavigator","tabs":[{"title":"Swift UI","content":[{"code":["@State var useTerrain = true","","var body: some View {","    Map {","        if useTerrain {","            StyleProjection(name: .globe)","            RasterDemSource(id: \"mapbox-dem\")","                .url(\"mapbox:\/\/mapbox.mapbox-terrain-dem-v1\")","                .maxzoom(14.0)","            Terrain(sourceId: \"mapbox-dem\")","                .exaggeration(5)","        } else {","            StyleProjection(name: .mercator)","        }","    }","}"],"type":"codeListing","syntax":"swift"}]},{"content":[{"syntax":"swift","code":["var useTerrain = true","","\/\/ To change your style content you should set new map primitives using ","\/\/ ``StyleManager\/setMapStyleContent(content:)`` like below. ","\/\/ This will fully change the displayed style content, ","\/\/ so be sure to include all the content you want.  ","func updateStyle(useTerrain: Bool) {","    mapView.mapboxMap.setMapStyleContent{","        if useTerrain {","            StyleProjection(name: .globe)","            RasterDemSource(id: \"mapbox-dem\")","                .url(\"mapbox:\/\/mapbox.mapbox-terrain-dem-v1\")","                .maxzoom(14.0)","            Terrain(sourceId: \"mapbox-dem\")","                .exaggeration(5)","        } else {","            StyleProjection(name: .mercator)","        }","    }","}"],"type":"codeListing"}],"title":"UI Kit"}]},{"text":"Building Custom Style Primitives","type":"heading","anchor":"Building-Custom-Style-Primitives","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create your own primitives in addition to Mapbox style primitives. Defining your own primitives gives you greater control over when the content is updated, and allows for cleaner organization of your code. To create a primitive, declare a new struct which conforms to "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent","isActive":true,"type":"reference"},{"type":"text","text":" and add your primitives to the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" property."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the code below creates a "},{"type":"codeVoice","code":"CarModelPrimitive"},{"type":"text","text":" which manages all you need to display a sport care Model on your map: the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource"},{"type":"text","text":" for the data, the "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Model","isActive":true},{"type":"text","text":" to display, and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ModelLayer"},{"type":"text","text":" used to position the model. Add your "},{"code":"CarModelPrimitive","type":"codeVoice"},{"type":"text","text":" to your style body just like Mapbox style primitives."}]},{"code":["struct CarModelPrimitive: MapStyleContent {","    var body: some MapStyleContent {","        GeoJSONSource(id: \"models-geojson\")","            .data(.featureCollection(carFeatureCollection))","","        Model(","            id: \"car\",","            uri: Bundle.main.url(forResource: \"sportcar\", withExtension: \"glb\")!","        )","","        ModelLayer(id: \"models\", source: \"models-geojson\")","            .modelId(Exp(.get) { \"model\" })","            .modelType(.common3d)","            .modelScale([40, 40, 40])","            .modelTranslation([0, 0, 0])","            .modelRotation([0, 0, 90])","            .modelOpacity(0.7)","    }","}","","... ","","Map {","    \/\/\/ other map primitives ","    CarModelPrimitive()","    \/\/\/ other map primitives ","}"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Performance Optimizations","anchor":"Performance-Optimizations"},{"type":"paragraph","inlineContent":[{"text":"Custom style primitives can be used to optimize performance for resource-heavy tasks like loading a large GeoJson. For example, you may want to load a GeoJSON of point data only if a user selects a certain setting and only update it when explicitly desired. In this case, you can add a ","type":"text"},{"type":"codeVoice","code":"showPoints"},{"type":"text","text":" variable. When toggled to true, an instance of your custom "},{"type":"codeVoice","code":"LazyGeoJSON"},{"type":"text","text":" struct conforming to "},{"type":"codeVoice","code":"MapStyleContent"},{"type":"text","text":" is added. This approach means that the features you add (in this case three points) will only be assessed for changes if the "},{"type":"codeVoice","code":"features"},{"text":" reference is changed. This prevents unnecessary computation when the underlying GeoJSON data has not changed.","type":"text"}]},{"type":"tabNavigator","tabs":[{"content":[{"syntax":"swift","type":"codeListing","code":["@State var showPoints = true","","var pinFeatures: FeaturesRef {","    FeaturesRef([","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 51.5073219, longitude: -0.1276474)))),","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 52.5170365, longitude: 13.3888599)))),","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 60.167488, longitude: 24.942747)))),","    ])","}","","var body: some View {","    Map {","        if showPoints {","            LazyGeoJSON(id: \"points\", features: pinFeatures)","            SymbolLayer(id: \"pin\", source: \"points\")","                .iconImage(\"pin-icon\")","        } ","    }","}","","...","","struct LazyGeoJSON: MapStyleContent {","    let id: String","    let features: FeaturesRef","","    var body: some MapStyleContent {","        \/\/ The body gets called and the GeoJSON source data is updated only when the `features` reference is changed.","        GeoJSONSource(id: id)","            .data(.featureCollection(FeatureCollection(features: features.features)))","    }","}","","\/\/\/ A reference wrapper over the array of features.","class FeaturesRef {","    let features: [Feature]","    init(_ features: [Feature]) { self.features = features }","}",""]}],"title":"Swift UI"},{"content":[{"type":"codeListing","syntax":"swift","code":["var showPoints = true","","var pinFeatures: FeaturesRef {","    FeaturesRef([","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 51.5073219, longitude: -0.1276474)))),","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 52.5170365, longitude: 13.3888599)))),","        Feature(geometry: .point(Point(CLLocationCoordinate2D(latitude: 60.167488, longitude: 24.942747)))),","    ])","}","","func updateStyle(useTerrain: Bool) {","    mapView.mapboxMap.setMapStyleContent {","        if showPoints {","            LazyGeoJSON(id: \"points\", features: pinFeatures)","            SymbolLayer(id: \"pin\", source: \"points\")","                .iconImage(\"pin-icon\")","        }","    }","}","","...","","struct LazyGeoJSON: MapStyleContent {","    let id: String","    let features: FeaturesRef","","    var body: some MapStyleContent {","        \/\/ The body gets called and the GeoJSON source data is updated only when the `features` reference is changed.","        GeoJSONSource(id: id)","            .data(.featureCollection(FeatureCollection(features: features.features)))","    }","}","","\/\/\/ A reference wrapper over the array of features.","class FeaturesRef {","    let features: [Feature]","    init(_ features: [Feature]) { self.features = features }","}"]}],"title":"UI Kit"}]},{"inlineContent":[{"type":"text","text":"For a full implementation of custom style primitives, see the "},{"type":"reference","identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Apps\/Examples\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","isActive":true},{"text":" in our examples application.","type":"text"}],"type":"paragraph"}]}],"kind":"article","references":{"doc://MapboxMaps/documentation/MapboxMaps/StyleManager/setMapStyleContent(content:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setMapStyleContent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"content"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"MapStyleContent","preciseIdentifier":"s:10MapboxMaps15MapStyleContentP"},{"kind":"text","text":")"}],"title":"setMapStyleContent(content:)","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)","role":"symbol","url":"\/documentation\/mapboxmaps\/stylemanager\/setmapstylecontent(content:)","type":"topic","tags":[{"text":"SPI","type":"spi"}],"abstract":[{"text":"Sets style content to the map.","type":"text"}]},"doc://MapboxMaps/documentation/MapboxMaps/Layer-Property-Values":{"kind":"article","title":"Layer Property Values","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/mapboxmaps\/layer-property-values","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Layer-Property-Values"},"doc://MapboxMaps/documentation/MapboxMaps/Sources":{"title":"Sources","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/mapboxmaps\/sources","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Sources","kind":"article"},"https://github.com/mapbox/mapbox-maps-ios/issues":{"type":"link","titleInlineContent":[{"text":"mapbox-maps-ios","type":"text"}],"url":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/issues","title":"mapbox-maps-ios","identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/issues"},"doc://MapboxMaps/documentation/MapboxMaps/HillshadeLayer":{"navigatorTitle":[{"kind":"identifier","text":"HillshadeLayer"}],"title":"HillshadeLayer","abstract":[{"type":"text","text":"Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles."}],"url":"\/documentation\/mapboxmaps\/hillshadelayer","kind":"symbol","role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/HillshadeLayer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HillshadeLayer"}]},"doc://MapboxMaps/documentation/MapboxMaps/HeatmapLayer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HeatmapLayer"}],"role":"symbol","abstract":[{"type":"text","text":"A heatmap."}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/heatmaplayer","title":"HeatmapLayer","navigatorTitle":[{"kind":"identifier","text":"HeatmapLayer"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/HeatmapLayer","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/ImageSource":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ImageSource","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ImageSource","kind":"identifier"}],"abstract":[{"text":"An image data source.","type":"text"}],"url":"\/documentation\/mapboxmaps\/imagesource","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ImageSource","type":"topic","kind":"symbol","title":"ImageSource"},"doc://MapboxMaps/documentation/MapboxMaps/VectorSource":{"title":"VectorSource","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"VectorSource","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/VectorSource","kind":"symbol","url":"\/documentation\/mapboxmaps\/vectorsource","abstract":[{"text":"A vector tile source.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"VectorSource"}]},"doc://MapboxMaps/documentation/MapboxMaps/Atmosphere":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Atmosphere"}],"title":"Atmosphere","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","kind":"symbol","navigatorTitle":[{"text":"Atmosphere","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/atmosphere","role":"symbol","abstract":[{"type":"text","text":"A styleâ€™s fog property is a global effect that improves depth perception by fading out distant objects."}]},"doc://MapboxMaps/documentation/MapboxMaps/SymbolLayer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SymbolLayer"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/SymbolLayer","abstract":[{"text":"An icon or a text label.","type":"text"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/symbollayer","role":"symbol","title":"SymbolLayer","type":"topic","navigatorTitle":[{"text":"SymbolLayer","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/ModelLayer":{"role":"symbol","navigatorTitle":[{"text":"ModelLayer","kind":"identifier"}],"abstract":[{"text":"A layer to render 3D Models.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModelLayer"}],"type":"topic","tags":[{"text":"SPI","type":"spi"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ModelLayer","url":"\/documentation\/mapboxmaps\/modellayer","title":"ModelLayer","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/RasterDemSource":{"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterDemSource","role":"symbol","title":"RasterDemSource","abstract":[{"type":"text","text":"A RGB-encoded raster DEM source"}],"url":"\/documentation\/mapboxmaps\/rasterdemsource","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RasterDemSource","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RasterDemSource"}]},"doc://MapboxMaps/documentation/MapboxMaps/FillExtrusionLayer":{"kind":"symbol","title":"FillExtrusionLayer","navigatorTitle":[{"kind":"identifier","text":"FillExtrusionLayer"}],"type":"topic","role":"symbol","abstract":[{"text":"An extruded (3D) polygon.","type":"text"}],"url":"\/documentation\/mapboxmaps\/fillextrusionlayer","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FillExtrusionLayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FillExtrusionLayer"}]},"doc://MapboxMaps/documentation/MapboxMaps/GeoJSONSource":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GeoJSONSource"}],"title":"GeoJSONSource","navigatorTitle":[{"text":"GeoJSONSource","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/mapboxmaps\/geojsonsource","abstract":[{"type":"text","text":"A GeoJSON data source."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/AmbientLight":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AmbientLight","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/AmbientLight","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/ambientlight","title":"AmbientLight","abstract":[{"type":"text","text":"An indirect light affecting all objects in the map adding a constant amount of light on them. It has no explicit direction and cannot cast shadows."}],"navigatorTitle":[{"text":"AmbientLight","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/Snapshotter":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshotter"}],"navigatorTitle":[{"kind":"identifier","text":"Snapshotter"}],"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Snapshotter","type":"topic","url":"\/documentation\/mapboxmaps\/snapshotter","role":"symbol","abstract":[{"text":"A utility class for capturing styled map snapshots.","type":"text"}],"title":"Snapshotter"},"doc://MapboxMaps/documentation/MapboxMaps/Style":{"kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/mapboxmaps\/style","title":"Style","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Style"},"doc://MapboxMaps/documentation/MapboxMaps/Map":{"url":"\/documentation\/mapboxmaps\/map","tags":[{"type":"spi","text":"SPI"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Map","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Map","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Map"}],"abstract":[{"type":"text","text":"A SwiftUI view that displays a Mapbox Map."}],"title":"Map"},"doc://MapboxMaps/documentation/MapboxMaps/CustomGeometrySource":{"abstract":[{"type":"text","text":"Describes a Custom Geometry Source to be used in the style"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomGeometrySource"}],"url":"\/documentation\/mapboxmaps\/customgeometrysource","kind":"symbol","type":"topic","navigatorTitle":[{"text":"CustomGeometrySource","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomGeometrySource","title":"CustomGeometrySource"},"doc://MapboxMaps/documentation/MapboxMaps/BackgroundLayer":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BackgroundLayer","kind":"identifier"}],"title":"BackgroundLayer","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/BackgroundLayer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackgroundLayer"}],"url":"\/documentation\/mapboxmaps\/backgroundlayer","role":"symbol","abstract":[{"text":"The background color or pattern of the map.","type":"text"}]},"doc://MapboxMaps/documentation/MapboxMaps/Terrain":{"abstract":[{"text":"The global terrain source.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terrain"}],"url":"\/documentation\/mapboxmaps\/terrain","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Terrain","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Terrain","title":"Terrain"},"doc://MapboxMaps/documentation/MapboxMaps/CustomRasterSource":{"abstract":[{"type":"text","text":"Describes a Custom Raster Source to be used in the style."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomRasterSource"}],"url":"\/documentation\/mapboxmaps\/customrastersource","kind":"symbol","type":"topic","tags":[{"text":"SPI","type":"spi"}],"navigatorTitle":[{"text":"CustomRasterSource","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomRasterSource","title":"CustomRasterSource"},"doc://MapboxMaps/documentation/MapboxMaps/LineLayer":{"kind":"symbol","role":"symbol","abstract":[{"text":"A stroked line.","type":"text"}],"title":"LineLayer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineLayer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LineLayer"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/LineLayer","url":"\/documentation\/mapboxmaps\/linelayer"},"doc://MapboxMaps/documentation/MapboxMaps/FillLayer":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FillLayer","abstract":[{"text":"A filled polygon with an optional stroked border.","type":"text"}],"type":"topic","url":"\/documentation\/mapboxmaps\/filllayer","navigatorTitle":[{"text":"FillLayer","kind":"identifier"}],"title":"FillLayer","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FillLayer"}]},"doc://MapboxMaps/documentation/MapboxMaps/Layers":{"title":"Layers","kind":"article","type":"topic","url":"\/documentation\/mapboxmaps\/layers","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Layers","role":"collectionGroup"},"doc://MapboxMaps/documentation/MapboxMaps":{"url":"\/documentation\/mapboxmaps","title":"MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","type":"topic","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/RasterSource":{"abstract":[{"type":"text","text":"A raster tile source."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RasterSource","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/rastersource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RasterSource"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterSource","title":"RasterSource"},"doc://MapboxMaps/documentation/MapboxMaps/LocationIndicatorLayer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LocationIndicatorLayer","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/locationindicatorlayer","abstract":[{"type":"text","text":"Location Indicator layer."}],"title":"LocationIndicatorLayer","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"LocationIndicatorLayer","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/LocationIndicatorLayer"},"doc://MapboxMaps/documentation/MapboxMaps/Projection":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Projection","role":"symbol","navigatorTitle":[{"text":"Projection","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/projection","abstract":[{"type":"text","text":"A collection of "},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection","isActive":true,"type":"reference"},{"type":"text","text":" projection methods."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Projection","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Projection"},"doc://MapboxMaps/documentation/MapboxMaps/CircleLayer":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CircleLayer","kind":"identifier"}],"abstract":[{"type":"text","text":"A filled circle."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CircleLayer","kind":"symbol","title":"CircleLayer","navigatorTitle":[{"kind":"identifier","text":"CircleLayer"}],"role":"symbol","url":"\/documentation\/mapboxmaps\/circlelayer","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/SkyLayer":{"title":"SkyLayer","navigatorTitle":[{"kind":"identifier","text":"SkyLayer"}],"abstract":[{"text":"A spherical dome around the map that is always rendered behind all other layers.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Warning: As of v10.6.0, "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","isActive":true,"type":"reference"},{"text":" is the preferred method for atmospheric styling. Sky layer is not supported by the globe projection, and will be phased out in future major release.","type":"text"}],"url":"\/documentation\/mapboxmaps\/skylayer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkyLayer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/SkyLayer","role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/MapStyleContent":{"tags":[{"text":"SPI","type":"spi"}],"role":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/mapstylecontent","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapStyleContent"}],"title":"MapStyleContent","abstract":[{"type":"text","text":"A protocol used to create any type of  map style content, such as layers, sources, lighting and others."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent","navigatorTitle":[{"text":"MapStyleContent","kind":"identifier"}],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/CustomLayer":{"tags":[{"type":"spi","text":"SPI"}],"role":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/customlayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomLayer"}],"title":"CustomLayer","abstract":[{"text":"Layer with custom rendering implementation","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CustomLayer","navigatorTitle":[{"text":"CustomLayer","kind":"identifier"}],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","url":"\/documentation\/mapboxmaps\/expressions","title":"Expressions","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions"},"https://github.com/mapbox/mapbox-maps-ios/blob/main/Apps/Examples/Examples/Swift%20UI%20Examples/DynamicStyleExample.swift":{"titleInlineContent":[{"text":"DynamicStylingExample","type":"text"}],"identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Apps\/Examples\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","title":"DynamicStylingExample","url":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Apps\/Examples\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","type":"link"},"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapboxMap"}],"url":"\/documentation\/mapboxmaps\/mapboxmap","title":"MapboxMap","type":"topic","abstract":[{"type":"text","text":"Provides access to the map model, including the camera, style, observable map events,"},{"type":"text","text":" "},{"type":"text","text":"and querying rendered features."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapboxMap"}],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/DirectionalLight":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/DirectionalLight","type":"topic","navigatorTitle":[{"text":"DirectionalLight","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DirectionalLight","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/directionallight","kind":"symbol","title":"DirectionalLight","abstract":[{"type":"text","text":"A light that has a direction and is located at infinite distance, so its rays are parallel. It simulates the sun light and can cast shadows."}]},"doc://MapboxMaps/documentation/MapboxMaps/Model":{"url":"\/documentation\/mapboxmaps\/model","kind":"symbol","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Model","navigatorTitle":[{"text":"Model","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Model"}],"role":"symbol","abstract":[{"text":"A structure represeting a Model","type":"text"}],"title":"Model"},"https://en.wikipedia.org/wiki/Web_Mercator_projection":{"type":"link","titleInlineContent":[{"text":"Spherical Mercator","type":"text"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection","identifier":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection","title":"Spherical Mercator"},"doc://MapboxMaps/documentation/MapboxMaps/TransitionOptions-swift.struct":{"kind":"symbol","title":"TransitionOptions","navigatorTitle":[{"kind":"identifier","text":"TransitionOptions"}],"type":"topic","role":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"TransitionOptions"},{"text":" control timing for the interpolation between a transitionable style","type":"text"},{"type":"text","text":" "},{"text":"propertyâ€™s previous value and new value. These can be used to define the style default property","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transition behavior. Also, any transitionable style property may also have its own "},{"type":"codeVoice","code":"-transition"},{"type":"text","text":" "},{"text":"property that defines specific transition timing for that specific layer property, overriding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the global transition values."}],"url":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/TransitionOptions-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TransitionOptions","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/RasterLayer":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RasterLayer","kind":"identifier"}],"abstract":[{"text":"Raster map textures such as satellite imagery.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/RasterLayer","kind":"symbol","title":"RasterLayer","navigatorTitle":[{"text":"RasterLayer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/mapboxmaps\/rasterlayer","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/FlatLight":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlatLight","kind":"identifier"}],"title":"FlatLight","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/FlatLight","kind":"symbol","navigatorTitle":[{"text":"FlatLight","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/flatlight","role":"symbol","abstract":[{"type":"text","text":"A global directional light source which is only applied on 3D and hillshade layers. Using this type disables other light sources."}]}}}