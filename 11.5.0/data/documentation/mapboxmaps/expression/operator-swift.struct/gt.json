{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"gt"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"text":".","kind":"text"},{"text":"Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"gt","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}],"externalID":"s:10MapboxMaps10ExpressionV8OperatorV2gtAEvpZ","symbolKind":"property","modules":[{"name":"MapboxMaps"}],"title":"gt","roleHeading":"Type Property","role":"symbol"},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/gt","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first input is strictly greater than the second, "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gt"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"type":"topic","title":"MapboxMaps","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/gt":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"gt"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gt","title":"gt","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/gt","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the first input is strictly greater than the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}]},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","type":"reference","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"type":"topic","title":"Expression","url":"\/documentation\/mapboxmaps\/expression","navigatorTitle":[{"text":"Expression","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","abstract":[],"type":"topic","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","role":"symbol","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","abstract":[],"title":"Expression.Operator","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"kind":"symbol"}}}