{"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/all","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if all the inputs are ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":", the result is "},{"type":"codeVoice","code":"false"},{"text":" and no further input expressions are evaluated.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"metadata":{"roleHeading":"Type Property","role":"symbol","modules":[{"name":"MapboxMaps"}],"symbolKind":"property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"all"},{"text":": ","kind":"text"},{"text":"Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator"}],"title":"all","externalID":"s:10MapboxMaps3ExpV8OperatorV3allAEvpZ"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","text":"Operator"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/all"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/Overview":{"role":"collection","title":"MapboxMaps Documentation","kind":"article","url":"\/documentation\/overview","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"kind":"symbol","title":"Exp.Operator","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","role":"symbol","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","abstract":[],"type":"topic","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"navigatorTitle":[{"text":"Exp","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp","title":"Exp","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true,"type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Exp","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","kind":"symbol","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/all":{"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/all","kind":"symbol","title":"all","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/all","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}],"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if all the inputs are ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to "},{"type":"codeVoice","code":"false"},{"type":"text","text":", the result is "},{"code":"false","type":"codeVoice"},{"type":"text","text":" and no further input expressions are evaluated."}],"type":"topic"}}}