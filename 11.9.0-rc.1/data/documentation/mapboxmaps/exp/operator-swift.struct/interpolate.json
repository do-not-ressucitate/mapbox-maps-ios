{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Interpolation types:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"linear\"]","type":"codeVoice"},{"type":"text","text":": Interpolates linearly between the pair of stops just less than and just greater than the input."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"exponential\", base]"},{"text":": Interpolates exponentially between the stops just less than and just greater than the input. ","type":"text"},{"type":"codeVoice","code":"base"},{"type":"text","text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly."}]}]},{"content":[{"inlineContent":[{"code":"[\"cubic-bezier\", x1, y1, x2, y2]","type":"codeVoice"},{"text":": Interpolates using the cubic bezier curve defined by the given control points.","type":"text"}],"type":"paragraph"}]}]}]}],"abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"code":"input","type":"codeVoice"},{"text":" may be any numeric expression (e.g., ","type":"text"},{"code":"[\"get\", \"population\"]","type":"codeVoice"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"code":"number","type":"codeVoice"},{"text":", ","type":"text"},{"code":"array<number>","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"color","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"symbolKind":"property","modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","externalID":"s:10MapboxMaps3ExpV8OperatorV11interpolateAEvpZ","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interpolate"},{"text":": ","kind":"text"},{"text":"Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}],"title":"interpolate"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate"},"kind":"symbol","variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"sections":[],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/interpolate":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"title":"interpolate","abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"text":" may be any numeric expression (e.g., ","type":"text"},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"text":", ","type":"text"},{"code":"array<number>","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"kind":"symbol","title":"Exp.Operator","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","role":"symbol","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"role":"collection","title":"MapboxMaps Documentation","kind":"article","url":"\/documentation\/overview","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","abstract":[],"type":"topic","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","kind":"symbol","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"navigatorTitle":[{"text":"Exp","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp","title":"Exp","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true,"type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Exp","kind":"identifier"}]}}}