{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","kind":"typeIdentifier","text":"Operator"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Interpolation types:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"linear\"]","type":"codeVoice"},{"type":"text","text":": Interpolates linearly between the pair of stops just less than and just greater than the input."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"exponential\", base]","type":"codeVoice"},{"type":"text","text":": Interpolates exponentially between the stops just less than and just greater than the input. "},{"code":"base","type":"codeVoice"},{"type":"text","text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"cubic-bezier\", x1, y1, x2, y2]"},{"text":": Interpolates using the cubic bezier curve defined by the given control points.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"code":"[\"get\", \"population\"]","type":"codeVoice"},{"text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be ","type":"text"},{"code":"number","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"code":"color","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"interpolate","modules":[{"name":"MapboxMaps"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier","text":"Operator"}],"externalID":"s:10MapboxMaps3ExpV8OperatorV11interpolateAEvpZ","role":"symbol","roleHeading":"Type Property","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate"},"kind":"symbol","references":{"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","kind":"article","abstract":[],"url":"\/documentation\/overview","type":"topic","role":"collection","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/interpolate":{"role":"symbol","kind":"symbol","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate","abstract":[{"text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The ","type":"text"},{"code":"input","type":"codeVoice"},{"text":" may be any numeric expression (e.g., ","type":"text"},{"code":"[\"get\", \"population\"]","type":"codeVoice"},{"text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be ","type":"text"},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"color"},{"text":".","type":"text"}],"title":"interpolate"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","kind":"article","title":"Expressions","type":"topic","role":"collectionGroup","url":"\/documentation\/mapboxmaps\/expressions"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true},{"text":"(expression) defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"role":"symbol","url":"\/documentation\/mapboxmaps\/exp","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exp"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Exp"}],"kind":"symbol","title":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"title":"Exp.Operator","type":"topic","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"role":"collection","url":"\/documentation\/mapboxmaps","title":"MapboxMaps","type":"topic"}}}