{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"metadata":{"title":"interpolate","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}],"roleHeading":"Type Property","modules":[{"name":"MapboxMaps"}],"role":"symbol","symbolKind":"property","externalID":"s:10MapboxMaps3ExpV8OperatorV11interpolateAEvpZ"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"interpolate","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","text":"Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","kind":"typeIdentifier","text":"Operator","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Interpolation types:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"linear\"]"},{"type":"text","text":": Interpolates linearly between the pair of stops just less than and just greater than the input."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"exponential\", base]","type":"codeVoice"},{"text":": Interpolates exponentially between the stops just less than and just greater than the input. ","type":"text"},{"type":"codeVoice","code":"base"},{"text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"cubic-bezier\", x1, y1, x2, y2]"},{"type":"text","text":": Interpolates using the cubic bezier curve defined by the given control points."}]}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"text":" may be any numeric expression (e.g., ","type":"text"},{"code":"[\"get\", \"population\"]","type":"codeVoice"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"code":"number","type":"codeVoice"},{"text":", ","type":"text"},{"code":"array<number>","type":"codeVoice"},{"type":"text","text":", or "},{"code":"color","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate"]}],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate","interfaceLanguage":"swift"},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/interpolate":{"kind":"symbol","role":"symbol","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate","type":"topic","title":"interpolate","abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"code":"input","type":"codeVoice"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"code":"array<number>","type":"codeVoice"},{"type":"text","text":", or "},{"code":"color","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"kind":"text","text":": "},{"text":"Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions","type":"topic","kind":"article","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"kind":"article","title":"MapboxMaps Documentation","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"url":"\/documentation\/mapboxmaps","title":"MapboxMaps","type":"topic","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Operator"}],"abstract":[],"kind":"symbol","title":"Exp.Operator","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","role":"symbol","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","url":"\/documentation\/mapboxmaps\/exp","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exp"}],"title":"Exp","kind":"symbol","navigatorTitle":[{"text":"Exp","kind":"identifier"}]}}}