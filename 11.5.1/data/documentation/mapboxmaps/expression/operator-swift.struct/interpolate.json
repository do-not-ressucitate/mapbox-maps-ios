{"sections":[],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/interpolate","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"code":"input","type":"codeVoice"},{"type":"text","text":" may be any numeric expression (e.g., "},{"code":"[\"get\", \"population\"]","type":"codeVoice"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"text":", ","type":"text"},{"code":"array<number>","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"text":".","kind":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Interpolation types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"linear\"]"},{"type":"text","text":": Interpolates linearly between the pair of stops just less than and just greater than the input."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"[\"exponential\", base]"},{"type":"text","text":": Interpolates exponentially between the stops just less than and just greater than the input. "},{"type":"codeVoice","code":"base"},{"type":"text","text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"[\"cubic-bezier\", x1, y1, x2, y2]"},{"text":": Interpolates using the cubic bezier curve defined by the given control points.","type":"text"}],"type":"paragraph"}]}]}]}],"metadata":{"title":"interpolate","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"},{"kind":"text","text":": "},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"role":"symbol","externalID":"s:10MapboxMaps10ExpressionV8OperatorV11interpolateAEvpZ","modules":[{"name":"MapboxMaps"}],"symbolKind":"property","roleHeading":"Type Property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/interpolate"]}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"kind":"symbol","title":"Expression","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"type":"topic","url":"\/documentation\/mapboxmaps\/expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Operator","kind":"identifier"}],"navigatorTitle":[{"text":"Operator","kind":"identifier"}],"kind":"symbol","title":"Expression.Operator","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/interpolate":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/interpolate","title":"interpolate","type":"topic","role":"symbol","abstract":[{"text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The ","type":"text"},{"code":"input","type":"codeVoice"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"text":", or ","type":"text"},{"code":"color","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/interpolate"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"url":"\/documentation\/mapboxmaps\/expressions","abstract":[],"kind":"article","title":"Expressions","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup"},"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"type":"topic"}}}