{"metadata":{"symbolKind":"property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV2ltAEvpZ","title":"lt","modules":[{"name":"MapboxMaps"}],"role":"symbol","roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lt"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","kind":"typeIdentifier"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"kind":"symbol","identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lt","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the first input is strictly less than the second, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lt"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"lt","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"}],"languages":["swift"],"platforms":["iOS"]}]}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","url":"\/documentation\/mapboxmaps\/expressions","abstract":[],"title":"Expressions","kind":"article"},"doc://MapboxMaps/documentation/MapboxMaps":{"type":"topic","role":"collection","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"url":"\/documentation\/mapboxmaps","title":"MapboxMaps","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lt":{"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the first input is strictly less than the second, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"title":"lt","kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lt","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lt","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lt"},{"kind":"text","text":": "},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Operator","kind":"identifier"}],"navigatorTitle":[{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","abstract":[],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","title":"Expression.Operator","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/mapboxmaps\/expression","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"title":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}]}}}