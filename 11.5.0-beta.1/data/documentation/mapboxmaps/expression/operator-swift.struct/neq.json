{"sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"neq"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}],"title":"neq","symbolKind":"property","roleHeading":"Type Property","role":"symbol","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3neqAEvpZ","modules":[{"name":"MapboxMaps"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/neq"]}],"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the input values are not equal, "},{"code":"false","type":"codeVoice"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/neq"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"neq","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","text":"Operator","kind":"typeIdentifier"}],"platforms":["iOS"]}],"kind":"declarations"}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"abstract":[],"role":"symbol","title":"Expression.Operator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"},"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"type":"topic","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","kind":"symbol","role":"collection"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/neq":{"kind":"symbol","type":"topic","title":"neq","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"neq"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/neq","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/neq","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the input values are not equal, "},{"code":"false","type":"codeVoice"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}]},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","kind":"article","url":"\/documentation\/mapboxmaps\/expressions","abstract":[],"role":"collectionGroup","title":"Expressions","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expression","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"role":"symbol","title":"Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"}}}