{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"role":"symbol","symbolKind":"method","modules":[{"name":"MapboxMaps"}],"title":"containsLatitude(forLatitude:)","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Method"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"latitude","content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"kind":"symbol","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"type":"text","text":" or not."}],"variants":[{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"type":"text","text":" or not."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"containsLatitude(forLatitude:)","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoordinateBounds","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","title":"CoordinateBounds","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"abstract":[],"title":"MapboxMaps Documentation","role":"collection","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","kind":"article","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"role":"collection","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"url":"\/documentation\/mapboxmaps","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"url":"\/documentation\/mapboxmaps\/mapboxmap-apis","abstract":[],"kind":"article","title":"MapboxMap","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","type":"topic","role":"collectionGroup"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"op":"replace","path":"\/metadata\/title","value":"containsLatitudeForLatitude:"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"value":[{"kind":"text","text":"- "},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/metadata\/fragments","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"op":"add","value":null,"path":"\/relationshipsSections"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"value":{"declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:d","text":"double","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},"op":"replace","path":"\/primaryContentSections\/0"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"latitude","content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}]}]}},{"value":{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}]}],"kind":"content"},"op":"replace","path":"\/primaryContentSections\/2"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}]},{"value":"MBMCoordinateBounds","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]}]}]}