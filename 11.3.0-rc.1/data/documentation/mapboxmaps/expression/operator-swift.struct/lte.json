{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lte"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"MapboxMaps"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lte"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}],"roleHeading":"Type Property","role":"symbol","title":"lte","symbolKind":"property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3lteAEvpZ"},"kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","interfaceLanguage":"swift"},"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","url":"\/documentation\/mapboxmaps\/expressions","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","kind":"article","title":"Expressions"},"doc://MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","role":"collection","url":"\/documentation\/mapboxmaps","title":"MapboxMaps","type":"topic","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lte":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"lte","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first input is less than or equal to the second, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"title":"lte","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","kind":"symbol","role":"symbol","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"title":"Expression.Operator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","abstract":[],"navigatorTitle":[{"text":"Operator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Expression","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/expression","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"kind":"symbol","title":"Expression"}}}