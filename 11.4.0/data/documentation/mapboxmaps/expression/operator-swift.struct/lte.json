{"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"metadata":{"title":"lte","modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","symbolKind":"property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lte"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"externalID":"s:10MapboxMaps10ExpressionV8OperatorV3lteAEvpZ","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"lte","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lte":{"role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lte"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","type":"topic","kind":"symbol","title":"lte"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"url":"\/documentation\/mapboxmaps\/expression","title":"Expression","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"kind":"symbol","role":"symbol","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Operator","kind":"identifier"}],"abstract":[],"title":"Expression.Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Operator"}]},"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","type":"topic","role":"collection"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","type":"topic","url":"\/documentation\/mapboxmaps\/expressions","abstract":[],"kind":"article","title":"Expressions","role":"collectionGroup"}}}