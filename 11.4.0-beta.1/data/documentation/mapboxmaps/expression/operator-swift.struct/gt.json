{"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first input is strictly greater than the second, "},{"code":"false","type":"codeVoice"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/gt"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gt"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gt","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","text":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"symbolKind":"property","role":"symbol","title":"gt","roleHeading":"Type Property","modules":[{"name":"MapboxMaps"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"gt","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"externalID":"s:10MapboxMaps10ExpressionV8OperatorV2gtAEvpZ"},"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"kind":"symbol","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","type":"topic","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"title":"MapboxMaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"title":"Expression","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Expression"}],"url":"\/documentation\/mapboxmaps\/expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"title":"Expressions","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","url":"\/documentation\/mapboxmaps\/expressions","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"type":"topic","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","title":"Expression.Operator","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"abstract":[]},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/gt":{"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/gt","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the first input is strictly greater than the second, "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"type":"topic","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gt","title":"gt","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gt","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}]}}}