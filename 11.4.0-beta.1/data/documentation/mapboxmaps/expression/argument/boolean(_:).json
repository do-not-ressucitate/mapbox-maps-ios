{"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Argument"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/argument\/boolean(_:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Argument\/boolean(_:)"},"sections":[],"metadata":{"externalID":"s:10MapboxMaps10ExpressionV8ArgumentO7booleanyAESbcAEmF","role":"symbol","modules":[{"name":"MapboxMaps"}],"title":"Expression.Argument.boolean(_:)","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"boolean"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"roleHeading":"Case"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"boolean","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"title":"Expression","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Expression"}],"url":"\/documentation\/mapboxmaps\/expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"title":"Expressions","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","url":"\/documentation\/mapboxmaps\/expressions","type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Argument":{"abstract":[{"type":"text","text":"An "},{"code":"ExpressionArgument","type":"codeVoice"},{"text":" is either a literal (associated with a double, string, boolean, or null value)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or another "},{"code":"Expression","type":"codeVoice"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Argument","url":"\/documentation\/mapboxmaps\/expression\/argument","title":"Expression.Argument","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Argument","kind":"identifier"}],"navigatorTitle":[{"text":"Argument","kind":"identifier"}],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps":{"kind":"symbol","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","type":"topic","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"title":"MapboxMaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Argument/boolean(_:)":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Argument\/boolean(_:)","type":"topic","role":"symbol","url":"\/documentation\/mapboxmaps\/expression\/argument\/boolean(_:)","kind":"symbol","title":"Expression.Argument.boolean(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"boolean"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"abstract":[]}}}