{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observeDataSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"camera","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions","text":"CameraOptions","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Cancelable","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable","preciseIdentifier":"c:objc(pl)MBXCancelable","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure that is invoked by the state whenever its camera changes. Returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" to stay subscribed and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to unsubscribe. "},{"type":"codeVoice","code":"handler"},{"text":" must be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"invoked on the main queue."}],"type":"paragraph"}]},{"name":"camera","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ViewportState"},{"text":"’s most recent camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"Cancelable","type":"codeVoice"},{"text":" that the caller can use to unsubscribe.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is commonly used by "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","type":"reference","isActive":true},{"type":"text","text":" implementations to obtain the"},{"type":"text","text":" "},{"text":"target camera for transition animations. Transitions typically cannot start their animations until after","type":"text"},{"type":"text","text":" "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" is invoked for the first time, so it’s a good idea for states to invoke "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"the current camera if it’s not too stale rather than waiting for the next camera change to occur. To"},{"text":" ","type":"text"},{"text":"increase the likelihood that a valid camera exists when a handler is registered, design","type":"text"},{"text":" ","type":"text"},{"code":"ViewportState","type":"codeVoice"},{"text":" implementations so that they start updating their internal state prior to when","type":"text"},{"type":"text","text":" "},{"type":"text","text":"they are passed to "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The caller may either cancel the returned "},{"code":"Cancelable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"or","type":"text"}]},{"type":"text","text":" return "},{"code":"false","type":"codeVoice"},{"type":"text","text":" from"},{"text":" ","type":"text"},{"code":"handler","type":"codeVoice"},{"type":"text","text":" to indicate that it wishes to stop receiving updates. Following either of these events,"},{"type":"text","text":" "},{"type":"text","text":"implemenations must no longer invoke "},{"type":"codeVoice","code":"handler"},{"text":" and must release all strong references to it.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)"},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"text":" to receive the cameras being generated by this ","type":"text"},{"code":"ViewportState","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"],["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observeDataSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"camera"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","text":"CameraOptions","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Cancelable","kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"roleHeading":"Instance Method","symbolKind":"method","required":true,"externalID":"s:10MapboxMaps13ViewportStateP17observeDataSource4withSo13MBXCancelable_pSbAA13CameraOptionsVc_tF","title":"observeDataSource(with:)","role":"symbol","modules":[{"name":"MapboxMaps"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup","type":"topic","title":"MapboxMap","kind":"article"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState":{"navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","url":"\/documentation\/mapboxmaps\/viewportstate","abstract":[{"type":"codeVoice","code":"ViewportState"},{"text":" is a protocol that ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"text":" ","type":"text"},{"type":"text","text":"from different states."}],"title":"ViewportState","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewportState","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/ViewportManager/transition(to:transition:completion:)":{"kind":"symbol","abstract":[{"text":"Executes a transition to the requested state.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"transition","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"ViewportState","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13ViewportStateP"},{"kind":"text","text":", "},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewportTransition","preciseIdentifier":"s:10MapboxMaps18ViewportTransitionP"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"success","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")?)"}],"url":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","role":"symbol","type":"topic","title":"transition(to:transition:completion:)","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportManager":{"title":"ViewportManager","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ViewportManager","kind":"identifier"}],"abstract":[{"code":"Viewport","type":"codeVoice"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"text":"transitions between them.","type":"text"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","navigatorTitle":[{"kind":"identifier","text":"ViewportManager"}],"url":"\/documentation\/mapboxmaps\/viewportmanager"},"doc://MapboxMaps/documentation/MapboxMaps/Camera-and-coordinates":{"role":"collectionGroup","type":"topic","kind":"article","title":"Camera and coordinates","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","url":"\/documentation\/mapboxmaps\/camera-and-coordinates"},"doc://MapboxMaps/documentation/MapboxMaps":{"kind":"symbol","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","type":"topic","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"title":"MapboxMaps"},"doc://MapboxMaps/documentation/MapboxMaps/CameraOptions":{"abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CameraOptions","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/cameraoptions","navigatorTitle":[{"kind":"identifier","text":"CameraOptions"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions","role":"symbol","title":"CameraOptions","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewportTransition","kind":"identifier"}],"title":"ViewportTransition","abstract":[{"type":"codeVoice","code":"ViewportTransition"},{"text":" is a protocol that ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},{"type":"text","text":" depends on as it orchestrates transitions"},{"type":"text","text":" "},{"type":"text","text":"to and from different "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","type":"reference","isActive":true},{"text":"s.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","role":"symbol","navigatorTitle":[{"text":"ViewportTransition","kind":"identifier"}],"type":"topic","url":"\/documentation\/mapboxmaps\/viewporttransition"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState/observeDataSource(with:)":{"kind":"symbol","type":"topic","title":"observeDataSource(with:)","role":"symbol","url":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"text":" to receive the cameras being generated by this ","type":"text"},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"."}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CameraOptions","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:objc(pl)MBXCancelable","text":"Cancelable","kind":"typeIdentifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/Cancelable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Cancelable"}],"title":"Cancelable","url":"\/documentation\/mapboxmaps\/cancelable","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable","abstract":[],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Cancelable","kind":"identifier"}]}}}