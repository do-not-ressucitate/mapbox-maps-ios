{"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte"},"metadata":{"title":"lte","modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3lteAEvpZ","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lte"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}],"symbolKind":"property","role":"symbol"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"lte","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["iOS"]}]}],"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"role":"symbol","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"title":"Expression.Operator","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","kind":"symbol","type":"topic","abstract":[]},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lte":{"role":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first input is less than or equal to the second, "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"title":"lte","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lte"},{"text":": ","kind":"text"},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"kind":"text","text":"."},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"type":"topic"},"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"title":"Expressions","type":"topic","url":"\/documentation\/mapboxmaps\/expressions","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","kind":"article","abstract":[]},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"title":"Expression","url":"\/documentation\/mapboxmaps\/expression","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","type":"reference","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"type":"topic"}}}