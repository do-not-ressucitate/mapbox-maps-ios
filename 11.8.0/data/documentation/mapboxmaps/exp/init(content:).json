{"kind":"symbol","metadata":{"modules":[{"name":"MapboxMaps"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"content","kind":"externalParam"},{"text":": () -> [","kind":"text"},{"kind":"typeIdentifier","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","kind":"typeIdentifier","text":"Argument"},{"text":"])","kind":"text"}],"title":"init(content:)","role":"symbol","roleHeading":"Initializer","externalID":"s:10MapboxMaps3ExpV7contentACSayAC8ArgumentOGyXE_tcfc"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@"},{"kind":"attribute","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentBuilder","text":"ExpressionArgumentBuilder","preciseIdentifier":"s:10MapboxMaps25ExpressionArgumentBuilderV"},{"kind":"text","text":" "},{"text":"content","kind":"externalParam"},{"text":": () -> [","kind":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","text":"Argument"},{"kind":"text","text":"])"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/init(content:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Initialize an expression with only arguments","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/exp\/init(content:)"]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ExpressionArgumentBuilder":{"title":"ExpressionArgumentBuilder","abstract":[{"text":":nodoc:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This API enables the Expressions DSL syntax and is not designed to be called directly."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentBuilder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExpressionArgumentBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressionArgumentBuilder","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expressionargumentbuilder"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","url":"\/documentation\/overview","abstract":[],"type":"topic","kind":"article","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","title":"Expressions","abstract":[],"url":"\/documentation\/mapboxmaps\/expressions","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","kind":"article","role":"collectionGroup"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/init(content:)":{"kind":"symbol","title":"init(content:)","type":"topic","abstract":[{"type":"text","text":"Initialize an expression with only arguments"}],"url":"\/documentation\/mapboxmaps\/exp\/init(content:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"content","kind":"externalParam"},{"kind":"text","text":": () -> ["},{"preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Argument","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/init(content:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/exp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Exp","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Exp"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true,"type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"title":"Exp"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"role":"collection","url":"\/documentation\/mapboxmaps","title":"MapboxMaps","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Argument":{"title":"Exp.Argument","navigatorTitle":[{"kind":"identifier","text":"Argument"}],"url":"\/documentation\/mapboxmaps\/exp\/argument","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"Exp.Argument"},{"type":"text","text":" is either a literal (associated with a double, string, boolean, or null value)"},{"text":" ","type":"text"},{"type":"text","text":"or another "},{"type":"codeVoice","code":"Exp"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Argument","kind":"identifier"}]}}}